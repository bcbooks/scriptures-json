{"version":3,"file":"router_link.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/directives/router_link.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {Directive, HostBinding, HostListener, Input, OnChanges, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {NavigationEnd, Router} from '../router';\nimport {ActivatedRoute} from '../router_state';\nimport {UrlTree} from '../url_tree';\n\n\n/**\n * @whatItDoes Lets you link to specific parts of your app.\n *\n * @howToUse\n *\n * Consider the following route configuration:\n\n * ```\n * [{ path: 'user/:name', component: UserCmp }]\n * ```\n *\n * When linking to this `user/:name` route, you can write:\n *\n * ```\n * <a routerLink='/user/bob'>link to user component</a>\n * ```\n *\n * @description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * Whe the link is static, you can use the directive as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\">link to user component</a>\n * ```\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one (e.g., `['/team/11/user', userName, {details:\n true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n * instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">link to user\n component</a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * You can also tell the directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>link to user\n component</a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * @selector ':not(a)[routerLink]'\n * @ngModule RouterModule\n *\n * See {@link Router.createUrlTree} for more information.\n *\n * @stable\n */\n\nexport class RouterLink {\n  private commands: any[] = [];\n   queryParams: {[k: string]: any};\n   fragment: string;\n   preserveQueryParams: boolean;\n   preserveFragment: boolean;\n\n  constructor(\n      private router: Router, private route: ActivatedRoute,\n      private locationStrategy: LocationStrategy) {}\n\n  \n  set routerLink(data: any[]|string) {\n    if (Array.isArray(data)) {\n      this.commands = data;\n    } else {\n      this.commands = [data];\n    }\n  }\n\n  \n  onClick(button: number, ctrlKey: boolean, metaKey: boolean): boolean {\n    if (button !== 0 || ctrlKey || metaKey) {\n      return true;\n    }\n    this.router.navigateByUrl(this.urlTree);\n    return false;\n  }\n\n  get urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: toBool(this.preserveQueryParams),\n      preserveFragment: toBool(this.preserveFragment)\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: ':not(a)[routerLink]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Router, },\n{type: ActivatedRoute, },\n{type: LocationStrategy, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'queryParams': [{ type: Input },],\n'fragment': [{ type: Input },],\n'preserveQueryParams': [{ type: Input },],\n'preserveFragment': [{ type: Input },],\n'routerLink': [{ type: Input },],\n'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey'], ] },],\n};\n}\n\n/**\n * @whatItDoes Lets you link to specific parts of your app.\n *\n * See {@link RouterLink} for more information.\n *\n * @selector 'a[routerLink]'\n * @ngModule RouterModule\n *\n * @stable\n */\n\nexport class RouterLinkWithHref implements OnChanges, OnDestroy {\n   target: string;\n  private commands: any[] = [];\n   queryParams: {[k: string]: any};\n   fragment: string;\n   routerLinkOptions: {preserveQueryParams: boolean, preserveFragment: boolean};\n   preserveQueryParams: boolean;\n   preserveFragment: boolean;\n  private subscription: Subscription;\n\n  // the url displayed on the anchor element.\n   href: string;\n\n  constructor(\n      private router: Router, private route: ActivatedRoute,\n      private locationStrategy: LocationStrategy) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.updateTargetUrlAndHref();\n      }\n    });\n  }\n\n  \n  set routerLink(data: any[]|string) {\n    if (Array.isArray(data)) {\n      this.commands = data;\n    } else {\n      this.commands = [data];\n    }\n  }\n\n  ngOnChanges(changes: {}): any { this.updateTargetUrlAndHref(); }\n  ngOnDestroy(): any { this.subscription.unsubscribe(); }\n\n  \n  onClick(button: number, ctrlKey: boolean, metaKey: boolean): boolean {\n    if (button !== 0 || ctrlKey || metaKey) {\n      return true;\n    }\n\n    if (typeof this.target === 'string' && this.target != '_self') {\n      return true;\n    }\n\n    this.router.navigateByUrl(this.urlTree);\n    return false;\n  }\n\n  private updateTargetUrlAndHref(): void {\n    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n  }\n\n  get urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: toBool(this.preserveQueryParams),\n      preserveFragment: toBool(this.preserveFragment)\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'a[routerLink]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Router, },\n{type: ActivatedRoute, },\n{type: LocationStrategy, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'target': [{ type: Input },],\n'queryParams': [{ type: Input },],\n'fragment': [{ type: Input },],\n'routerLinkOptions': [{ type: Input },],\n'preserveQueryParams': [{ type: Input },],\n'preserveFragment': [{ type: Input },],\n'href': [{ type: HostBinding },],\n'routerLink': [{ type: Input },],\n'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey'], ] },],\n};\n}\n\nfunction toBool(s?: any): boolean {\n  if (s === '') return true;\n  return !!s;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}