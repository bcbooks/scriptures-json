{"version":3,"file":"router.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/router.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location} from '@angular/common';\nimport {Compiler, ComponentFactoryResolver, Injector, NgModuleFactoryLoader, ReflectiveInjector, Type} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {from} from 'rxjs/observable/from';\nimport {of } from 'rxjs/observable/of';\nimport {every} from 'rxjs/operator/every';\nimport {map} from 'rxjs/operator/map';\nimport {mergeAll} from 'rxjs/operator/mergeAll';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {reduce} from 'rxjs/operator/reduce';\n\nimport {applyRedirects} from './apply_redirects';\nimport {ResolveData, Routes, validateConfig} from './config';\nimport {createRouterState} from './create_router_state';\nimport {createUrlTree} from './create_url_tree';\nimport {RouterOutlet} from './directives/router_outlet';\nimport {recognize} from './recognize';\nimport {LoadedRouterConfig, RouterConfigLoader} from './router_config_loader';\nimport {RouterOutletMap} from './router_outlet_map';\nimport {ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, advanceActivatedRoute, createEmptyState} from './router_state';\nimport {NavigationCancelingError, PRIMARY_OUTLET, Params} from './shared';\nimport {UrlSerializer, UrlTree, containsTree, createEmptyUrlTree} from './url_tree';\nimport {andObservables, forEach, merge, shallowEqual, waitForMap, wrapIntoObservable} from './utils/collection';\nimport {TreeNode} from './utils/tree';\n\ndeclare var Zone: any;\n\n/**\n * @whatItDoes Represents the extra options used during navigation.\n *\n * @stable\n */\nexport interface NavigationExtras {\n  /**\n  * Enables relative navigation from the current ActivatedRoute.\n  *\n  * Configuration:\n  *\n  * ```\n  * [{\n  *   path: 'parent',\n  *   component: ParentComponent,\n  *   children: [\n  *     {\n  *       path: 'list',\n  *       component: ListComponent\n  *     },\n  *     {\n  *       path: 'child',\n  *       component: ChildComponent\n  *     }\n  *   ]\n  * }]\n  * ```\n  *\n  * Navigate to list route from child route:\n  *\n  * ```\n  *  @Component({...})\n  *  class ChildComponent {\n  *    constructor(private router: Router, private route: ActivatedRoute) {}\n  *\n  *    go() {\n  *      this.router.navigate(['../list'], { relativeTo: this.route });\n  *    }\n  *  }\n  * ```\n  */\n  relativeTo?: ActivatedRoute;\n\n  /**\n  * Sets query parameters to the URL.\n  *\n  * ```\n  * // Navigate to /results?page=1\n  * this.router.navigate(['/results'], { queryParams: { page: 1 } });\n  * ```\n  */\n  queryParams?: Params;\n\n  /**\n  * Sets the hash fragment for the URL.\n  *\n  * ```\n  * // Navigate to /results#top\n  * this.router.navigate(['/results'], { fragment: 'top' });\n  * ```\n  */\n  fragment?: string;\n\n  /**\n  * Preserves the query parameters for the next navigation.\n  *\n  * ```\n  * // Preserve query params from /results?page=1 to /view?page=1\n  * this.router.navigate(['/view'], { preserveQueryParams: true });\n  * ```\n  */\n  preserveQueryParams?: boolean;\n  /**\n  * Preserves the fragment for the next navigation\n  *\n  * ```\n  * // Preserve fragment from /results#top to /view#top\n  * this.router.navigate(['/view'], { preserveFragment: true });\n  * ```\n  */\n  preserveFragment?: boolean;\n  /**\n  * Navigates without pushing a new state into history.\n  *\n  * ```\n  * // Navigate silently to /view\n  * this.router.navigate(['/view'], { skipLocationChange: true });\n  * ```\n  */\n  skipLocationChange?: boolean;\n  /**\n  * Navigates while replacing the current state in history.\n  *\n  * ```\n  * // Navigate to /view\n  * this.router.navigate(['/view'], { replaceUrl: true });\n  * ```\n  */\n  replaceUrl?: boolean;\n}\n\n/**\n * @whatItDoes Represents an event triggered when a navigation starts.\n *\n * @stable\n */\nexport class NavigationStart {\n  // TODO: vsavkin: make internal\n  constructor(\n      /** @docsNotRequired */\n      public id: number,\n\n      /** @docsNotRequired */\n      public url: string) {}\n\n  /** @docsNotRequired */\n  toString(): string { return `NavigationStart(id: ${this.id}, url: '${this.url}')`; }\n}\n\n/**\n * @whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * @stable\n */\nexport class NavigationEnd {\n  // TODO: vsavkin: make internal\n  constructor(\n      /** @docsNotRequired */\n      public id: number,\n\n      /** @docsNotRequired */\n      public url: string,\n\n      /** @docsNotRequired */\n      public urlAfterRedirects: string) {}\n\n  /** @docsNotRequired */\n  toString(): string {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n\n/**\n * @whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * @stable\n */\nexport class NavigationCancel {\n  // TODO: vsavkin: make internal\n  constructor(\n      /** @docsNotRequired */\n      public id: number,\n\n      /** @docsNotRequired */\n      public url: string,\n\n      /** @docsNotRequired */\n      public reason: string) {}\n\n  /** @docsNotRequired */\n  toString(): string { return `NavigationCancel(id: ${this.id}, url: '${this.url}')`; }\n}\n\n/**\n * @whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * @stable\n */\nexport class NavigationError {\n  // TODO: vsavkin: make internal\n  constructor(\n      /** @docsNotRequired */\n      public id: number,\n\n      /** @docsNotRequired */\n      public url: string,\n\n      /** @docsNotRequired */\n      public error: any) {}\n\n  /** @docsNotRequired */\n  toString(): string {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n\n/**\n * @whatItDoes Represents an event triggered when routes are recognized.\n *\n * @stable\n */\nexport class RoutesRecognized {\n  // TODO: vsavkin: make internal\n  constructor(\n      /** @docsNotRequired */\n      public id: number,\n\n      /** @docsNotRequired */\n      public url: string,\n      /** @docsNotRequired */\n      public urlAfterRedirects: string,\n      /** @docsNotRequired */\n      public state: RouterStateSnapshot) {}\n\n  /** @docsNotRequired */\n  toString(): string {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\n/**\n * @whatItDoes Represents a router event.\n *\n * Please see {@link NavigationStart}, {@link NavigationEnd}, {@link NavigationCancel}, {@link\n * NavigationError},\n * {@link RoutesRecognized} for more information.\n *\n * @stable\n */\nexport type Event =\n    NavigationStart | NavigationEnd | NavigationCancel | NavigationError | RoutesRecognized;\n\n/**\n * @whatItDoes Error handler that is invoked when a navigation errors.\n *\n * @description\n * If the handler returns a value, the navigation promise will be resolved with this value.\n * If the handler throws an exception, the navigation promise will be rejected with\n * the exception.\n *\n * @stable\n */\nexport type ErrorHandler = (error: any) => any;\n\nfunction defaultErrorHandler(error: any): any {\n  throw error;\n}\n\n/**\n * @whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {@link Routes} for more details and examples.\n *\n * @ngModule RouterModule\n *\n * @stable\n */\nexport class Router {\n  private currentUrlTree: UrlTree;\n  private currentRouterState: RouterState;\n  private locationSubscription: Subscription;\n  private routerEvents: Subject<Event>;\n  private navigationId: number = 0;\n  private configLoader: RouterConfigLoader;\n\n  /**\n   * Error handler that is invoked when a navigation errors.\n   *\n   * See {@link ErrorHandler} for more information.\n   */\n  errorHandler: ErrorHandler = defaultErrorHandler;\n\n  /**\n   * Indicates if at least one navigation happened.\n   */\n  navigated: boolean = false;\n\n  /**\n   * Creates the router service.\n   */\n  // TODO: vsavkin make internal after the final is out.\n  constructor(\n      private rootComponentType: Type<any>, private urlSerializer: UrlSerializer,\n      private outletMap: RouterOutletMap, private location: Location, private injector: Injector,\n      loader: NgModuleFactoryLoader, compiler: Compiler, public config: Routes) {\n    this.resetConfig(config);\n    this.routerEvents = new Subject<Event>();\n    this.currentUrlTree = createEmptyUrlTree();\n    this.configLoader = new RouterConfigLoader(loader, compiler);\n    this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n  }\n\n  /**\n   * Sets up the location change listener and performs the initial navigation.\n   */\n  initialNavigation(): void {\n    this.setUpLocationChangeListener();\n    this.navigateByUrl(this.location.path(true), {replaceUrl: true});\n  }\n\n  /**\n   * Sets up the location change listener.\n   */\n  setUpLocationChangeListener(): void {\n    // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n    // which does not work properly with zone.js in IE and Safari\n    this.locationSubscription = <any>this.location.subscribe(Zone.current.wrap((change: any) => {\n      const tree = this.urlSerializer.parse(change['url']);\n      // we fire multiple events for a single URL change\n      // we should navigate only once\n      return this.currentUrlTree.toString() !== tree.toString() ?\n          this.scheduleNavigation(tree, {skipLocationChange: change['pop'], replaceUrl: true}) :\n          null;\n    }));\n  }\n\n  /**\n   * Returns the current route state.\n   */\n  get routerState(): RouterState { return this.currentRouterState; }\n\n  /**\n   * Returns the current url.\n   */\n  get url(): string { return this.serializeUrl(this.currentUrlTree); }\n\n  /**\n   * Returns an observable of route events\n   */\n  get events(): Observable<Event> { return this.routerEvents; }\n\n  /**\n   * Resets the configuration used for navigation and generating links.\n   *\n   * ### Usage\n   *\n   * ```\n   * router.resetConfig([\n   *  { path: 'team/:id', component: TeamCmp, children: [\n   *    { path: 'simple', component: SimpleCmp },\n   *    { path: 'user/:name', component: UserCmp }\n   *  ] }\n   * ]);\n   * ```\n   */\n  resetConfig(config: Routes): void {\n    validateConfig(config);\n    this.config = config;\n  }\n\n  /**\n   * @docsNotRequired\n   */\n  ngOnDestroy() { this.dispose(); }\n\n  /**\n   * Disposes of the router.\n   */\n  dispose(): void { this.locationSubscription.unsubscribe(); }\n\n  /**\n   * Applies an array of commands to the current url tree and creates a new url tree.\n   *\n   * When given an activate route, applies the given commands starting from the route.\n   * When not given a route, applies the given command starting from the root.\n   *\n   * ### Usage\n   *\n   * ```\n   * // create /team/33/user/11\n   * router.createUrlTree(['/team', 33, 'user', 11]);\n   *\n   * // create /team/33;expand=true/user/11\n   * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n   *\n   * // you can collapse static segments like this (this works only with the first passed-in value):\n   * router.createUrlTree(['/team/33/user', userId]);\n   *\n   * // If the first segment can contain slashes, and you do not want the router to split it, you\n   * // can do the following:\n   *\n   * router.createUrlTree([{segmentPath: '/one/two'}]);\n   *\n   * // create /team/33/(user/11//right:chat)\n   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n   *\n   * // remove the right secondary node\n   * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n   *\n   * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n   *\n   * // navigate to /team/33/user/11/details\n   * router.createUrlTree(['details'], {relativeTo: route});\n   *\n   * // navigate to /team/33/user/22\n   * router.createUrlTree(['../22'], {relativeTo: route});\n   *\n   * // navigate to /team/44/user/22\n   * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n   * ```\n   */\n  createUrlTree(\n      commands: any[], {relativeTo, queryParams, fragment, preserveQueryParams,\n                        preserveFragment}: NavigationExtras = {}): UrlTree {\n    const a = relativeTo ? relativeTo : this.routerState.root;\n    const q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams;\n    const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n    return createUrlTree(a, this.currentUrlTree, commands, q, f);\n  }\n\n  /**\n   * Navigate based on the provided url. This navigation is always absolute.\n   *\n   * Returns a promise that:\n   * - is resolved with 'true' when navigation succeeds\n   * - is resolved with 'false' when navigation fails\n   * - is rejected when an error happens\n   *\n   * ### Usage\n   *\n   * ```\n   * router.navigateByUrl(\"/team/33/user/11\");\n   *\n   * // Navigate without updating the URL\n   * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n   * ```\n   *\n   * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n   * and does not apply any delta to the current one.\n   */\n  navigateByUrl(url: string|UrlTree, extras: NavigationExtras = {skipLocationChange: false}):\n      Promise<boolean> {\n    if (url instanceof UrlTree) {\n      return this.scheduleNavigation(url, extras);\n    } else {\n      const urlTree = this.urlSerializer.parse(url);\n      return this.scheduleNavigation(urlTree, extras);\n    }\n  }\n\n  /**\n   * Navigate based on the provided array of commands and a starting point.\n   * If no starting route is provided, the navigation is absolute.\n   *\n   * Returns a promise that:\n   * - is resolved with 'true' when navigation succeeds\n   * - is resolved with 'false' when navigation fails\n   * - is rejected when an error happens\n   *\n   * ### Usage\n   *\n   * ```\n   * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n   *\n   * // Navigate without updating the URL\n   * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true });\n   * ```\n   *\n   * In opposite to `navigateByUrl`, `navigate` always takes a delta\n   * that is applied to the current URL.\n   */\n  navigate(commands: any[], extras: NavigationExtras = {skipLocationChange: false}):\n      Promise<boolean> {\n    return this.scheduleNavigation(this.createUrlTree(commands, extras), extras);\n  }\n\n  /**\n   * Serializes a {@link UrlTree} into a string.\n   */\n  serializeUrl(url: UrlTree): string { return this.urlSerializer.serialize(url); }\n\n  /**\n   * Parses a string into a {@link UrlTree}.\n   */\n  parseUrl(url: string): UrlTree { return this.urlSerializer.parse(url); }\n\n  /**\n   * Returns if the url is activated or not.\n   */\n  isActive(url: string|UrlTree, exact: boolean): boolean {\n    if (url instanceof UrlTree) {\n      return containsTree(this.currentUrlTree, url, exact);\n    } else {\n      const urlTree = this.urlSerializer.parse(url);\n      return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n  }\n\n  private scheduleNavigation(url: UrlTree, extras: NavigationExtras): Promise<boolean> {\n    const id = ++this.navigationId;\n    this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n    return Promise.resolve().then(\n        (_) => this.runNavigate(url, extras.skipLocationChange, extras.replaceUrl, id));\n  }\n\n  private runNavigate(\n      url: UrlTree, shouldPreventPushState: boolean, shouldReplaceUrl: boolean,\n      id: number): Promise<boolean> {\n    if (id !== this.navigationId) {\n      this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n      this.routerEvents.next(new NavigationCancel(\n          id, this.serializeUrl(url),\n          `Navigation ID ${id} is not equal to the current navigation id ${this.navigationId}`));\n      return Promise.resolve(false);\n    }\n\n    return new Promise((resolvePromise, rejectPromise) => {\n      let state: RouterState;\n      let navigationIsSuccessful: boolean;\n      let preActivation: PreActivation;\n\n      let appliedUrl: UrlTree;\n\n      const storedState = this.currentRouterState;\n      const storedUrl = this.currentUrlTree;\n\n      const redirectsApplied$ = applyRedirects(this.injector, this.configLoader, url, this.config);\n\n      const snapshot$ = mergeMap.call(redirectsApplied$, (u: UrlTree) => {\n        appliedUrl = u;\n        return recognize(\n            this.rootComponentType, this.config, appliedUrl, this.serializeUrl(appliedUrl));\n      });\n\n      const emitRecognzied$ = map.call(snapshot$, (newRouterStateSnapshot: RouterStateSnapshot) => {\n        this.routerEvents.next(new RoutesRecognized(\n            id, this.serializeUrl(url), this.serializeUrl(appliedUrl), newRouterStateSnapshot));\n        return newRouterStateSnapshot;\n      });\n\n      const routerState$ = map.call(emitRecognzied$, (routerStateSnapshot: RouterStateSnapshot) => {\n        return createRouterState(routerStateSnapshot, this.currentRouterState);\n      });\n\n      const preactivation$ = map.call(routerState$, (newState: RouterState) => {\n        state = newState;\n        preActivation =\n            new PreActivation(state.snapshot, this.currentRouterState.snapshot, this.injector);\n        preActivation.traverse(this.outletMap);\n      });\n\n      const preactivation2$ =\n          mergeMap.call(preactivation$, () => { return preActivation.checkGuards(); });\n\n      const resolveData$ = mergeMap.call(preactivation2$, (shouldActivate: boolean) => {\n        if (shouldActivate) {\n          return map.call(preActivation.resolveData(), () => shouldActivate);\n        } else {\n          return of (shouldActivate);\n        }\n      });\n\n      resolveData$\n          .forEach((shouldActivate: boolean) => {\n            if (!shouldActivate || id !== this.navigationId) {\n              navigationIsSuccessful = false;\n              return;\n            }\n\n            this.currentUrlTree = appliedUrl;\n            this.currentRouterState = state;\n\n            if (!shouldPreventPushState) {\n              let path = this.urlSerializer.serialize(appliedUrl);\n              if (this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                this.location.replaceState(path);\n              } else {\n                this.location.go(path);\n              }\n            }\n\n            new ActivateRoutes(state, storedState).activate(this.outletMap);\n\n            navigationIsSuccessful = true;\n          })\n          .then(\n              () => {\n                this.navigated = true;\n                if (navigationIsSuccessful) {\n                  this.routerEvents.next(\n                      new NavigationEnd(id, this.serializeUrl(url), this.serializeUrl(appliedUrl)));\n                  resolvePromise(true);\n                } else {\n                  this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), ''));\n                  resolvePromise(false);\n                }\n              },\n              (e: any) => {\n                if (e instanceof NavigationCancelingError) {\n                  this.navigated = true;\n                  this.routerEvents.next(\n                      new NavigationCancel(id, this.serializeUrl(url), e.message));\n                  resolvePromise(false);\n                } else {\n                  this.routerEvents.next(new NavigationError(id, this.serializeUrl(url), e));\n                  try {\n                    resolvePromise(this.errorHandler(e));\n                  } catch (ee) {\n                    rejectPromise(ee);\n                  }\n                }\n\n                if (id === this.navigationId) {\n                  this.currentRouterState = storedState;\n                  this.currentUrlTree = storedUrl;\n                  this.location.replaceState(this.serializeUrl(storedUrl));\n                }\n              });\n    });\n  }\n}\n\n\nclass CanActivate {\n  constructor(public path: ActivatedRouteSnapshot[]) {}\n  get route(): ActivatedRouteSnapshot { return this.path[this.path.length - 1]; }\n}\n\nclass CanDeactivate {\n  constructor(public component: Object, public route: ActivatedRouteSnapshot) {}\n}\n\n\nexport class PreActivation {\n  private checks: Array<CanActivate|CanDeactivate> = [];\n  constructor(\n      private future: RouterStateSnapshot, private curr: RouterStateSnapshot,\n      private injector: Injector) {}\n\n  traverse(parentOutletMap: RouterOutletMap): void {\n    const futureRoot = this.future._root;\n    const currRoot = this.curr ? this.curr._root : null;\n    this.traverseChildRoutes(futureRoot, currRoot, parentOutletMap, [futureRoot.value]);\n  }\n\n  checkGuards(): Observable<boolean> {\n    if (this.checks.length === 0) return of (true);\n    const checks$ = from(this.checks);\n    const runningChecks$ = map.call(checks$, (s: any) => {\n      if (s instanceof CanActivate) {\n        return andObservables(\n            from([this.runCanActivateChild(s.path), this.runCanActivate(s.route)]));\n      } else if (s instanceof CanDeactivate) {\n        // workaround https://github.com/Microsoft/TypeScript/issues/7271\n        const s2 = s as CanDeactivate;\n        return this.runCanDeactivate(s2.component, s2.route);\n      } else {\n        throw new Error('Cannot be reached');\n      }\n    });\n    const mergedChecks$ = mergeAll.call(runningChecks$);\n    return every.call(mergedChecks$, (result: any) => result === true);\n  }\n\n  resolveData(): Observable<any> {\n    if (this.checks.length === 0) return of (null);\n    const checks$ = from(this.checks);\n    const runningChecks$ = mergeMap.call(checks$, (s: any) => {\n      if (s instanceof CanActivate) {\n        return this.runResolve(s.route);\n      } else {\n        return of (null);\n      }\n    });\n    return reduce.call(runningChecks$, (_: any, __: any) => _);\n  }\n\n  private traverseChildRoutes(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      outletMap: RouterOutletMap, futurePath: ActivatedRouteSnapshot[]): void {\n    const prevChildren: {[key: string]: any} = nodeChildrenAsMap(currNode);\n\n    futureNode.children.forEach(c => {\n      this.traverseRoutes(c, prevChildren[c.value.outlet], outletMap, futurePath.concat([c.value]));\n      delete prevChildren[c.value.outlet];\n    });\n    forEach(\n        prevChildren,\n        (v: any, k: string) => this.deactivateOutletAndItChildren(v, outletMap._outlets[k]));\n  }\n\n  traverseRoutes(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      parentOutletMap: RouterOutletMap, futurePath: ActivatedRouteSnapshot[]): void {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    const outlet = parentOutletMap ? parentOutletMap._outlets[futureNode.value.outlet] : null;\n\n    // reusing the node\n    if (curr && future._routeConfig === curr._routeConfig) {\n      if (!shallowEqual(future.params, curr.params)) {\n        this.checks.push(new CanDeactivate(outlet.component, curr), new CanActivate(futurePath));\n      } else {\n        // we need to set the data\n        future.data = curr.data;\n      }\n\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.traverseChildRoutes(\n            futureNode, currNode, outlet ? outlet.outletMap : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.traverseChildRoutes(futureNode, currNode, parentOutletMap, futurePath);\n      }\n    } else {\n      if (curr) {\n        // if we had a normal route, we need to deactivate only that outlet.\n        if (curr.component) {\n          this.deactivateOutletAndItChildren(curr, outlet);\n\n          // if we had a componentless route, we need to deactivate everything!\n        } else {\n          this.deactivateOutletMap(parentOutletMap);\n        }\n      }\n\n      this.checks.push(new CanActivate(futurePath));\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.traverseChildRoutes(futureNode, null, outlet ? outlet.outletMap : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.traverseChildRoutes(futureNode, null, parentOutletMap, futurePath);\n      }\n    }\n  }\n\n  private deactivateOutletAndItChildren(route: ActivatedRouteSnapshot, outlet: RouterOutlet): void {\n    if (outlet && outlet.isActivated) {\n      this.deactivateOutletMap(outlet.outletMap);\n      this.checks.push(new CanDeactivate(outlet.component, route));\n    }\n  }\n\n  private deactivateOutletMap(outletMap: RouterOutletMap): void {\n    forEach(outletMap._outlets, (v: RouterOutlet) => {\n      if (v.isActivated) {\n        this.deactivateOutletAndItChildren(v.activatedRoute.snapshot, v);\n      }\n    });\n  }\n\n  private runCanActivate(future: ActivatedRouteSnapshot): Observable<boolean> {\n    const canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0) return of (true);\n    const obs = map.call(from(canActivate), (c: any) => {\n      const guard = this.getToken(c, future);\n      if (guard.canActivate) {\n        return wrapIntoObservable(guard.canActivate(future, this.future));\n      } else {\n        return wrapIntoObservable(guard(future, this.future));\n      }\n    });\n    return andObservables(obs);\n  }\n\n  private runCanActivateChild(path: ActivatedRouteSnapshot[]): Observable<boolean> {\n    const future = path[path.length - 1];\n\n    const canActivateChildGuards = path.slice(0, path.length - 1)\n                                       .reverse()\n                                       .map(p => this.extractCanActivateChild(p))\n                                       .filter(_ => _ !== null);\n\n    return andObservables(map.call(from(canActivateChildGuards), (d: any) => {\n      const obs = map.call(from(d.guards), (c: any) => {\n        const guard = this.getToken(c, c.node);\n        if (guard.canActivateChild) {\n          return wrapIntoObservable(guard.canActivateChild(future, this.future));\n        } else {\n          return wrapIntoObservable(guard(future, this.future));\n        }\n      });\n      return andObservables(obs);\n    }));\n  }\n\n  private extractCanActivateChild(p: ActivatedRouteSnapshot):\n      {node: ActivatedRouteSnapshot, guards: any[]} {\n    const canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0) return null;\n    return {node: p, guards: canActivateChild};\n  }\n\n  private runCanDeactivate(component: Object, curr: ActivatedRouteSnapshot): Observable<boolean> {\n    const canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0) return of (true);\n    const canDeactivate$ = map.call(from(canDeactivate), (c: any) => {\n      const guard = this.getToken(c, curr);\n      if (guard.canDeactivate) {\n        return wrapIntoObservable(guard.canDeactivate(component, curr, this.curr));\n      } else {\n        return wrapIntoObservable(guard(component, curr, this.curr));\n      }\n    });\n    const merged$ = mergeAll.call(canDeactivate$);\n    return every.call(merged$, (result: any) => result === true);\n  }\n\n  private runResolve(future: ActivatedRouteSnapshot): Observable<any> {\n    const resolve = future._resolve;\n    return map.call(this.resolveNode(resolve.current, future), (resolvedData: any): any => {\n      resolve.resolvedData = resolvedData;\n      future.data = merge(future.data, resolve.flattenedResolvedData);\n      return null;\n    });\n  }\n\n  private resolveNode(resolve: ResolveData, future: ActivatedRouteSnapshot): Observable<any> {\n    return waitForMap(resolve, (k, v) => {\n      const resolver = this.getToken(v, future);\n      return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                                wrapIntoObservable(resolver(future, this.future));\n    });\n  }\n\n  private getToken(token: any, snapshot: ActivatedRouteSnapshot): any {\n    const config = closestLoadedConfig(snapshot);\n    const injector = config ? config.injector : this.injector;\n    return injector.get(token);\n  }\n}\n\nclass ActivateRoutes {\n  constructor(private futureState: RouterState, private currState: RouterState) {}\n\n  activate(parentOutletMap: RouterOutletMap): void {\n    const futureRoot = this.futureState._root;\n    const currRoot = this.currState ? this.currState._root : null;\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentOutletMap);\n  }\n\n  private activateChildRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      outletMap: RouterOutletMap): void {\n    const prevChildren: {[key: string]: any} = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.activateRoutes(c, prevChildren[c.value.outlet], outletMap);\n      delete prevChildren[c.value.outlet];\n    });\n    forEach(\n        prevChildren,\n        (v: any, k: string) => this.deactivateOutletAndItChildren(outletMap._outlets[k]));\n  }\n\n  activateRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      parentOutletMap: RouterOutletMap): void {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n\n    // reusing the node\n    if (future === curr) {\n      // advance the route to push the parameters\n      advanceActivatedRoute(future);\n\n      // If we have a normal route, we need to go through an outlet.\n      if (future.component) {\n        const outlet = getOutlet(parentOutletMap, futureNode.value);\n        this.activateChildRoutes(futureNode, currNode, outlet.outletMap);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.activateChildRoutes(futureNode, currNode, parentOutletMap);\n      }\n    } else {\n      if (curr) {\n        // if we had a normal route, we need to deactivate only that outlet.\n        if (curr.component) {\n          const outlet = getOutlet(parentOutletMap, futureNode.value);\n          this.deactivateOutletAndItChildren(outlet);\n\n          // if we had a componentless route, we need to deactivate everything!\n        } else {\n          this.deactivateOutletMap(parentOutletMap);\n        }\n      }\n\n      // if we have a normal route, we need to advance the route\n      // and place the component into the outlet. After that recurse.\n      if (future.component) {\n        advanceActivatedRoute(future);\n        const outlet = getOutlet(parentOutletMap, futureNode.value);\n        const outletMap = new RouterOutletMap();\n        this.placeComponentIntoOutlet(outletMap, future, outlet);\n        this.activateChildRoutes(futureNode, null, outletMap);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        advanceActivatedRoute(future);\n        this.activateChildRoutes(futureNode, null, parentOutletMap);\n      }\n    }\n  }\n\n  private placeComponentIntoOutlet(\n      outletMap: RouterOutletMap, future: ActivatedRoute, outlet: RouterOutlet): void {\n    const resolved = <any[]>[{provide: ActivatedRoute, useValue: future}, {\n      provide: RouterOutletMap,\n      useValue: outletMap\n    }];\n\n    const config = parentLoadedConfig(future.snapshot);\n\n    let loadedFactoryResolver: ComponentFactoryResolver = null;\n    let loadedInjector: Injector = null;\n\n    if (config) {\n      loadedFactoryResolver = config.factoryResolver;\n      loadedInjector = config.injector;\n      resolved.push({provide: ComponentFactoryResolver, useValue: loadedFactoryResolver});\n    }\n    outlet.activate(\n        future, loadedFactoryResolver, loadedInjector, ReflectiveInjector.resolve(resolved),\n        outletMap);\n  }\n\n  private deactivateOutletAndItChildren(outlet: RouterOutlet): void {\n    if (outlet && outlet.isActivated) {\n      this.deactivateOutletMap(outlet.outletMap);\n      outlet.deactivate();\n    }\n  }\n\n  private deactivateOutletMap(outletMap: RouterOutletMap): void {\n    forEach(outletMap._outlets, (v: RouterOutlet) => this.deactivateOutletAndItChildren(v));\n  }\n}\n\nfunction parentLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig {\n  let s = snapshot.parent;\n  while (s) {\n    const c: any = s._routeConfig;\n    if (c && c._loadedConfig) return c._loadedConfig;\n    if (c && c.component) return null;\n    s = s.parent;\n  }\n  return null;\n}\n\nfunction closestLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig {\n  if (!snapshot) return null;\n\n  let s = snapshot.parent;\n  while (s) {\n    const c: any = s._routeConfig;\n    if (c && c._loadedConfig) return c._loadedConfig;\n    s = s.parent;\n  }\n  return null;\n}\n\nfunction nodeChildrenAsMap(node: TreeNode<any>) {\n  return node ? node.children.reduce((m: any, c: TreeNode<any>) => {\n    m[c.value.outlet] = c;\n    return m;\n  }, {}) : {};\n}\n\nfunction getOutlet(outletMap: RouterOutletMap, route: ActivatedRoute): RouterOutlet {\n  let outlet = outletMap._outlets[route.outlet];\n  if (!outlet) {\n    const componentName = (<any>route.component).name;\n    if (route.outlet === PRIMARY_OUTLET) {\n      throw new Error(`Cannot find primary outlet to load '${componentName}'`);\n    } else {\n      throw new Error(`Cannot find the outlet ${route.outlet} to load '${componentName}'`);\n    }\n  }\n  return outlet;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}