{"version":3,"file":"shared.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/shared.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ListWrapper, StringMapWrapper} from '../facade/collection';\nimport {hasConstructor, isBlank, isPresent, looseIdentical} from '../facade/lang';\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {Validators} from '../validators';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {normalizeAsyncValidator, normalizeValidator} from './normalize_validator';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\n\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  var p = ListWrapper.clone(parent.path);\n  p.push(name);\n  return p;\n}\n\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (isBlank(control)) _throwError(dir, 'Cannot find control with');\n  if (isBlank(dir.valueAccessor)) _throwError(dir, 'No value accessor for form control with');\n\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n  dir.valueAccessor.writeValue(control.value);\n\n  // view -> model\n  dir.valueAccessor.registerOnChange((newValue: any) => {\n    dir.viewToModelUpdate(newValue);\n    control.markAsDirty();\n    control.setValue(newValue, {emitModelToViewChange: false});\n  });\n\n  // touched\n  dir.valueAccessor.registerOnTouched(() => control.markAsTouched());\n\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n\n  if (dir.valueAccessor.setDisabledState) {\n    control.registerOnDisabledChange(\n        (isDisabled: boolean) => { dir.valueAccessor.setDisabledState(isDisabled); });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator | ValidatorFn) => {\n    if ((<Validator>validator).registerOnValidatorChange)\n      (<Validator>validator).registerOnValidatorChange(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: Validator | ValidatorFn) => {\n    if ((<Validator>validator).registerOnValidatorChange)\n      (<Validator>validator).registerOnValidatorChange(() => control.updateValueAndValidity());\n  });\n}\n\nexport function cleanUpControl(control: FormControl, dir: NgControl) {\n  dir.valueAccessor.registerOnChange(() => _noControlError(dir));\n  dir.valueAccessor.registerOnTouched(() => _noControlError(dir));\n  dir._rawValidators.forEach((validator: Validator) => validator.registerOnValidatorChange(null));\n  dir._rawAsyncValidators.forEach(\n      (validator: Validator) => validator.registerOnValidatorChange(null));\n  if (control) control._clearChangeFns();\n}\n\nexport function setUpFormContainer(\n    control: FormGroup | FormArray, dir: AbstractFormGroupDirective | FormArrayName) {\n  if (isBlank(control)) _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let messageEnd: string;\n  if (dir.path.length > 1) {\n    messageEnd = `path: '${dir.path.join(' -> ')}'`;\n  } else if (dir.path[0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n\nexport function composeValidators(validators: /* Array<Validator|Function> */ any[]): ValidatorFn {\n  return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n\nexport function composeAsyncValidators(validators: /* Array<Validator|Function> */ any[]):\n    AsyncValidatorFn {\n  return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                                 null;\n}\n\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!StringMapWrapper.contains(changes, 'model')) return false;\n  var change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return (\n      hasConstructor(valueAccessor, CheckboxControlValueAccessor) ||\n      hasConstructor(valueAccessor, NumberValueAccessor) ||\n      hasConstructor(valueAccessor, SelectControlValueAccessor) ||\n      hasConstructor(valueAccessor, SelectMultipleControlValueAccessor) ||\n      hasConstructor(valueAccessor, RadioControlValueAccessor));\n}\n\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor {\n  if (isBlank(valueAccessors)) return null;\n\n  var defaultAccessor: ControlValueAccessor;\n  var builtinAccessor: ControlValueAccessor;\n  var customAccessor: ControlValueAccessor;\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (hasConstructor(v, DefaultValueAccessor)) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (isPresent(builtinAccessor))\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (isPresent(customAccessor))\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (isPresent(customAccessor)) return customAccessor;\n  if (isPresent(builtinAccessor)) return builtinAccessor;\n  if (isPresent(defaultAccessor)) return defaultAccessor;\n\n  _throwError(dir, 'No valid value accessor for form control with');\n  return null;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}