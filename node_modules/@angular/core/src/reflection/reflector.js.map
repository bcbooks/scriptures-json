{"version":3,"file":"reflector.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/reflection/reflector.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Map, MapWrapper, Set, SetWrapper, StringMapWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {ReflectorReader} from './reflector_reader';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Reflective information about a symbol, including annotations, interfaces, and other metadata.\n */\nexport class ReflectionInfo {\n  constructor(\n      public annotations?: any[], public parameters?: any[][], public factory?: Function,\n      public interfaces?: any[], public propMetadata?: {[key: string]: any[]}) {}\n}\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector extends ReflectorReader {\n  /** @internal */\n  _injectableInfo = new Map<any, ReflectionInfo>();\n  /** @internal */\n  _getters = new Map<string, GetterFn>();\n  /** @internal */\n  _setters = new Map<string, SetterFn>();\n  /** @internal */\n  _methods = new Map<string, MethodFn>();\n  /** @internal */\n  _usedKeys: Set<any>;\n  reflectionCapabilities: PlatformReflectionCapabilities;\n\n  constructor(reflectionCapabilities: PlatformReflectionCapabilities) {\n    super();\n    this._usedKeys = null;\n    this.reflectionCapabilities = reflectionCapabilities;\n  }\n\n  updateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n\n  isReflectionEnabled(): boolean { return this.reflectionCapabilities.isReflectionEnabled(); }\n\n  /**\n   * Causes `this` reflector to track keys used to access\n   * {@link ReflectionInfo} objects.\n   */\n  trackUsage(): void { this._usedKeys = new Set(); }\n\n  /**\n   * Lists types for which reflection information was not requested since\n   * {@link #trackUsage} was called. This list could later be audited as\n   * potential dead code.\n   */\n  listUnusedKeys(): any[] {\n    if (this._usedKeys == null) {\n      throw new Error('Usage tracking is disabled');\n    }\n    var allTypes = MapWrapper.keys(this._injectableInfo);\n    return allTypes.filter(key => !SetWrapper.has(this._usedKeys, key));\n  }\n\n  registerFunction(func: Function, funcInfo: ReflectionInfo): void {\n    this._injectableInfo.set(func, funcInfo);\n  }\n\n  registerType(type: Type<any>, typeInfo: ReflectionInfo): void {\n    this._injectableInfo.set(type, typeInfo);\n  }\n\n  registerGetters(getters: {[key: string]: GetterFn}): void { _mergeMaps(this._getters, getters); }\n\n  registerSetters(setters: {[key: string]: SetterFn}): void { _mergeMaps(this._setters, setters); }\n\n  registerMethods(methods: {[key: string]: MethodFn}): void { _mergeMaps(this._methods, methods); }\n\n  factory(type: Type<any>): Function {\n    if (this._containsReflectionInfo(type)) {\n      var res = this._getReflectionInfo(type).factory;\n      return isPresent(res) ? res : null;\n    } else {\n      return this.reflectionCapabilities.factory(type);\n    }\n  }\n\n  parameters(typeOrFunc: Type<any>): any[][] {\n    if (this._injectableInfo.has(typeOrFunc)) {\n      var res = this._getReflectionInfo(typeOrFunc).parameters;\n      return isPresent(res) ? res : [];\n    } else {\n      return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (this._injectableInfo.has(typeOrFunc)) {\n      var res = this._getReflectionInfo(typeOrFunc).annotations;\n      return isPresent(res) ? res : [];\n    } else {\n      return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n  }\n\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    if (this._injectableInfo.has(typeOrFunc)) {\n      var res = this._getReflectionInfo(typeOrFunc).propMetadata;\n      return isPresent(res) ? res : {};\n    } else {\n      return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n  }\n\n  interfaces(type: Type<any>): any[] {\n    if (this._injectableInfo.has(type)) {\n      var res = this._getReflectionInfo(type).interfaces;\n      return isPresent(res) ? res : [];\n    } else {\n      return this.reflectionCapabilities.interfaces(type);\n    }\n  }\n\n  hasLifecycleHook(type: any, lcInterface: Type<any>, lcProperty: string): boolean {\n    var interfaces = this.interfaces(type);\n    if (interfaces.indexOf(lcInterface) !== -1) {\n      return true;\n    } else {\n      return this.reflectionCapabilities.hasLifecycleHook(type, lcInterface, lcProperty);\n    }\n  }\n\n  getter(name: string): GetterFn {\n    if (this._getters.has(name)) {\n      return this._getters.get(name);\n    } else {\n      return this.reflectionCapabilities.getter(name);\n    }\n  }\n\n  setter(name: string): SetterFn {\n    if (this._setters.has(name)) {\n      return this._setters.get(name);\n    } else {\n      return this.reflectionCapabilities.setter(name);\n    }\n  }\n\n  method(name: string): MethodFn {\n    if (this._methods.has(name)) {\n      return this._methods.get(name);\n    } else {\n      return this.reflectionCapabilities.method(name);\n    }\n  }\n\n  /** @internal */\n  _getReflectionInfo(typeOrFunc: any): ReflectionInfo {\n    if (isPresent(this._usedKeys)) {\n      this._usedKeys.add(typeOrFunc);\n    }\n    return this._injectableInfo.get(typeOrFunc);\n  }\n\n  /** @internal */\n  _containsReflectionInfo(typeOrFunc: any) { return this._injectableInfo.has(typeOrFunc); }\n\n  importUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n\n  resolveIdentifier(name: string, moduleUrl: string, runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n  }\n  resolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction _mergeMaps(target: Map<string, Function>, config: {[key: string]: Function}): void {\n  StringMapWrapper.forEach(config, (v: Function, k: string) => target.set(k, v));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}