{"version":3,"file":"ng_zone_impl.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/zone/ng_zone_impl.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nexport class NgZoneImpl {\n  static isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n\n  /** @internal */\n  private outer: Zone;\n  /** @internal */\n  private inner: Zone;\n\n  private onEnter: () => void;\n  private onLeave: () => void;\n  private setMicrotask: (hasMicrotasks: boolean) => void;\n  private setMacrotask: (hasMacrotasks: boolean) => void;\n  private onError: (error: any) => void;\n\n  constructor({trace, onEnter, onLeave, setMicrotask, setMacrotask, onError}: {\n    trace: boolean,\n    onEnter: () => void,\n    onLeave: () => void,\n    setMicrotask: (hasMicrotasks: boolean) => void,\n    setMacrotask: (hasMacrotasks: boolean) => void,\n    onError: (error: any) => void\n  }) {\n    this.onEnter = onEnter;\n    this.onLeave = onLeave;\n    this.setMicrotask = setMicrotask;\n    this.setMacrotask = setMacrotask;\n    this.onError = onError;\n\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n    Zone.assertZonePatched();\n    this.outer = this.inner = Zone.current;\n    if ((Zone as any)['wtfZoneSpec']) {\n      this.inner = this.inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n    if (trace && (Zone as any)['longStackTraceZoneSpec']) {\n      this.inner = this.inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n    this.inner = this.inner.fork({\n      name: 'angular',\n      properties: <any>{'isAngularZone': true},\n      onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task,\n                     applyThis: any, applyArgs: any): any => {\n        try {\n          this.onEnter();\n          return delegate.invokeTask(target, task, applyThis, applyArgs);\n        } finally {\n          this.onLeave();\n        }\n      },\n\n\n      onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n                 applyThis: any, applyArgs: any[], source: string): any => {\n        try {\n          this.onEnter();\n          return delegate.invoke(target, callback, applyThis, applyArgs, source);\n        } finally {\n          this.onLeave();\n        }\n      },\n\n      onHasTask:\n          (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n              // We are only interested in hasTask events which originate from our zone\n              // (A child hasTask event is not interesting to us)\n              if (hasTaskState.change == 'microTask') {\n                this.setMicrotask(hasTaskState.microTask);\n              } else if (hasTaskState.change == 'macroTask') {\n                this.setMacrotask(hasTaskState.macroTask);\n              }\n            }\n          },\n\n      onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n        delegate.handleError(target, error);\n        this.onError(error);\n        return false;\n      }\n    });\n  }\n\n  runInner(fn: () => any): any { return this.inner.run(fn); };\n  runInnerGuarded(fn: () => any): any { return this.inner.runGuarded(fn); };\n  runOuter(fn: () => any): any { return this.outer.run(fn); };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}