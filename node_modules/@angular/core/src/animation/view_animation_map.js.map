{"version":3,"file":"view_animation_map.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/animation/view_animation_map.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,WAAW,EAAE,GAAG,EAAE,gBAAgB,EAAC,MAAM,sBAAsB;OAChE,EAAC,SAAS,EAAC,MAAM,gBAAgB;AAIxC;IAAA;QACU,SAAI,GAAG,IAAI,GAAG,EAAyC,CAAC;QACxD,gBAAW,GAAsB,EAAE,CAAC;IA8C9C,CAAC;IA5CC,sBAAI,oCAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;;;OAAA;IAE5D,+BAAI,GAAJ,UAAK,OAAY,EAAE,aAAqB;QACtC,IAAI,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,kDAAuB,GAAvB,UAAwB,OAAY;QAClC,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAElC,MAAM,CAAC,EAAE,GAAG,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAC/C,CAAC;IAED,8BAAG,GAAH,UAAI,OAAY,EAAE,aAAqB,EAAE,MAAuB;QAC9D,IAAI,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACnC,kBAAkB,GAAG,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,aAAa,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QACtC,CAAC;QACD,kBAAkB,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IAC7C,CAAC;IAED,wCAAa,GAAb,cAAqC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAE/D,iCAAM,GAAN,UAAO,OAAY,EAAE,aAAqB;QACxC,IAAI,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,MAAM,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC/C,OAAO,kBAAkB,CAAC,aAAa,CAAC,CAAC;YACzC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7C,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAE9C,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;IACH,CAAC;IACH,uBAAC;AAAD,CAAC,AAhDD,IAgDC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListWrapper, Map, StringMapWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\n\nimport {AnimationPlayer} from './animation_player';\n\nexport class ViewAnimationMap {\n  private _map = new Map<any, {[key: string]: AnimationPlayer}>();\n  private _allPlayers: AnimationPlayer[] = [];\n\n  get length(): number { return this.getAllPlayers().length; }\n\n  find(element: any, animationName: string): AnimationPlayer {\n    var playersByAnimation = this._map.get(element);\n    if (isPresent(playersByAnimation)) {\n      return playersByAnimation[animationName];\n    }\n  }\n\n  findAllPlayersByElement(element: any): AnimationPlayer[] {\n    const el = this._map.get(element);\n\n    return el ? StringMapWrapper.values(el) : [];\n  }\n\n  set(element: any, animationName: string, player: AnimationPlayer): void {\n    var playersByAnimation = this._map.get(element);\n    if (!isPresent(playersByAnimation)) {\n      playersByAnimation = {};\n    }\n    var existingEntry = playersByAnimation[animationName];\n    if (isPresent(existingEntry)) {\n      this.remove(element, animationName);\n    }\n    playersByAnimation[animationName] = player;\n    this._allPlayers.push(player);\n    this._map.set(element, playersByAnimation);\n  }\n\n  getAllPlayers(): AnimationPlayer[] { return this._allPlayers; }\n\n  remove(element: any, animationName: string): void {\n    var playersByAnimation = this._map.get(element);\n    if (isPresent(playersByAnimation)) {\n      var player = playersByAnimation[animationName];\n      delete playersByAnimation[animationName];\n      var index = this._allPlayers.indexOf(player);\n      ListWrapper.removeAt(this._allPlayers, index);\n\n      if (StringMapWrapper.isEmpty(playersByAnimation)) {\n        this._map.delete(element);\n      }\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}